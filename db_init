DROP TABLE IF EXISTS author CASCADE;
CREATE TABLE IF NOT EXISTS author (
	id              serial          PRIMARY KEY,
	second_name 	varchar(30) 	NOT NULL,
	first_name      varchar(30) 	NOT NULL,
	third_name      varchar(30)
);

DROP TABLE IF EXISTS book CASCADE;
CREATE TABLE IF NOT EXISTS book 
(
	id serial PRIMARY KEY,
	name            varchar(100) NOT NULL,
	author_id       integer REFERENCES author (id) 	NOT NULL,
	deposit         money NOT NULL,
	cost_per_day 	money NOT NULL
);

DROP TABLE IF EXISTS genre CASCADE;
CREATE TABLE IF NOT EXISTS genre 
(
	id      serial PRIMARY KEY,
	name 	varchar(100) NOT NULL
);


DROP TABLE IF EXISTS book_genre CASCADE;
CREATE TABLE IF NOT EXISTS book_genre (
	book_id      serial REFERENCES book (id) NOT NULL,
	genre_id	 integer REFERENCES genre (id) NOT NULL
);

DROP TABLE IF EXISTS customer CASCADE;
CREATE TABLE IF NOT EXISTS customer (
	id serial PRIMARY KEY,
	second_name 	varchar(30) NOT NULL,
	first_name      varchar(30) NOT NULL,
	third_name      varchar(30),
	address         varchar(50) NOT NULL,
	contacts        varchar(16) NOT NULL
);

DROP TABLE IF EXISTS category CASCADE;
CREATE TABLE IF NOT EXISTS category (
	id      serial PRIMARY KEY,
	name 	varchar(100) NOT NULL
);

DROP TABLE IF EXISTS customer_category CASCADE;
CREATE TABLE IF NOT EXISTS customer_category (
	customer_id 	integer REFERENCES customer (id) NOT NULL,
	category_id 	integer REFERENCES category (id) NOT NULL
);

DROP TABLE IF EXISTS transaction CASCADE;
CREATE TABLE IF NOT EXISTS transaction (
	id              serial PRIMARY KEY,
	customer_id 	integer REFERENCES customer (id) NOT NULL,
	book_id         integer REFERENCES book (id) NOT NULL,
	date_out        timestamp DEFAULT(CURRENT_TIMESTAMP),
	date_in         date,
	penalty         money DEFAULT(0)
);

